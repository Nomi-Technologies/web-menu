/*
 * A collection of Nomi's APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ACollectionOfNomisApIs) {
      root.ACollectionOfNomisApIs = {};
    }
    root.ACollectionOfNomisApIs.TagDishTags = factory(root.ACollectionOfNomisApIs.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The TagDishTags model module.
   * @module model/TagDishTags
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>TagDishTags</code>.
   * @alias module:model/TagDishTags
   * @class
   * @param dishId {Number} 
   * @param tagId {Number} 
   * @param removable {Boolean} 
   */
  var exports = function(dishId, tagId, removable) {
    this.dishId = dishId;
    this.tagId = tagId;
    this.removable = removable;
  };

  /**
   * Constructs a <code>TagDishTags</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TagDishTags} obj Optional instance to populate.
   * @return {module:model/TagDishTags} The populated <code>TagDishTags</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('dishId'))
        obj.dishId = ApiClient.convertToType(data['dishId'], 'Number');
      if (data.hasOwnProperty('tagId'))
        obj.tagId = ApiClient.convertToType(data['tagId'], 'Number');
      if (data.hasOwnProperty('removable'))
        obj.removable = ApiClient.convertToType(data['removable'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {Number} dishId
   */
  exports.prototype.dishId = undefined;

  /**
   * @member {Number} tagId
   */
  exports.prototype.tagId = undefined;

  /**
   * @member {Boolean} removable
   */
  exports.prototype.removable = undefined;

  return exports;

}));
