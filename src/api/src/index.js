/*
 * A collection of Nomi's APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiResponse', 'model/Category', 'model/Dish', 'model/Restaurant', 'model/Tag', 'model/TagDishTags', 'model/User', 'api/DefaultApi', 'api/DishApi', 'api/RestaurantApi', 'api/UserApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ApiResponse'), require('./model/Category'), require('./model/Dish'), require('./model/Restaurant'), require('./model/Tag'), require('./model/TagDishTags'), require('./model/User'), require('./api/DefaultApi'), require('./api/DishApi'), require('./api/RestaurantApi'), require('./api/UserApi'));
  }
}(function(ApiClient, ApiResponse, Category, Dish, Restaurant, Tag, TagDishTags, User, DefaultApi, DishApi, RestaurantApi, UserApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ACollectionOfNomisApIs = require('index'); // See note below*.
   * var xxxSvc = new ACollectionOfNomisApIs.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ACollectionOfNomisApIs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ACollectionOfNomisApIs.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ACollectionOfNomisApIs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ApiResponse model constructor.
     * @property {module:model/ApiResponse}
     */
    ApiResponse: ApiResponse,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The Dish model constructor.
     * @property {module:model/Dish}
     */
    Dish: Dish,
    /**
     * The Restaurant model constructor.
     * @property {module:model/Restaurant}
     */
    Restaurant: Restaurant,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The TagDishTags model constructor.
     * @property {module:model/TagDishTags}
     */
    TagDishTags: TagDishTags,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi,
    /**
     * The DishApi service constructor.
     * @property {module:api/DishApi}
     */
    DishApi: DishApi,
    /**
     * The RestaurantApi service constructor.
     * @property {module:api/RestaurantApi}
     */
    RestaurantApi: RestaurantApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
}));
